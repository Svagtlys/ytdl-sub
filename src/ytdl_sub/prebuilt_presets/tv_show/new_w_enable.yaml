presets:

####################################################################################################

  "TV Show":
    output_options:
      output_directory: "{tv_show_directory}/{tv_show_name_sanitized}"
      file_name: "{episode_file_path}.{ext}"
      thumbnail_name: "{thumbnail_file_name}"
      info_json_name: "{episode_file_path}.{info_json_ext}"
      maintain_download_archive: True

    ytdl_options:
      break_on_existing: True

    chapters:
      embed_chapters: True

    video_tags:
      show: "{tv_show_name}"
      genre: "{tv_show_genre}"
      episode_id: "{episode_number}"
      title: "{episode_title}"
      synopsis: "{episode_plot}"
      year: "{episode_year}"
      date: "{episode_date_standardized}"
      contentRating: "{episode_content_rating}"

    nfo_tags:
      enable: "{nfo_tags_enable}"
      kodi_safe: "{kodi_safe_enable}"
      nfo_name: "{episode_file_path}.nfo"
      nfo_root: "episodedetails"
      tags:
        genre:
         - "{tv_show_genre}"
        season: "{season_number}"
        episode: "{episode_number}"
        title: "{episode_title}"
        plot: "{episode_plot}"
        year: "{episode_year}"
        aired: "{episode_date_standardized}"
        mpaa: "{episode_content_rating}"

    output_directory_nfo_tags:
      enable: "{nfo_tags_enable}"
      kodi_safe: "{kodi_safe_enable}"
      nfo_name: "tvshow.nfo"
      nfo_root: "tvshow"
      tags:
        title: "{tv_show_name}"
        genre:
         - "{tv_show_genre}"
        mpaa: "{tv_show_content_rating}"

    file_convert:
      enable: "{file_convert_enable}"
      convert_to: "mp4" 

    format: "{format_selector}"

    overrides:
      #   MUST DEFINE:
      #     tv_show_directory
      #     season_number
      #     season_number_padded
      #     episode_number
      #     episode_number_padded
      file_uid_default: "{uid_sanitized}"
      file_title_default: "{title_sanitized}"
      file_uid_plex: "{uid_sanitized_plex}"
      file_title_plex: "{title_sanitized_plex}"


      file_uid: >-
        {
          %if(
            %contains(player, 'plex'),
            file_uid_plex,
            file_uid_default
          )
        }
      file_title: >-
        {
          %if(
            %contains(player, 'plex'),
            file_title_plex,
            file_title_default
          )
        }

      # Defaults
      tv_show_genre_default: "ytdl-sub"
      tv_show_content_rating_default: "TV-14"

      # Indents to use default values
      subscription_indent_1: "{tv_show_genre_default}"
      subscription_indent_2: "{tv_show_content_rating_default}"

      tv_show_name: "{subscription_name}"
      tv_show_genre: "{subscription_indent_1}"
      tv_show_content_rating: "{subscription_indent_2}"
      season_directory_name: "Season {season_number_padded}"
      episode_title: "{upload_date_standardized} - {title}"
      episode_plot: "{webpage_url}\n\n{description}"
      episode_year: "{upload_year}"
      episode_content_rating: "{tv_show_content_rating}"
      episode_date_standardized: "{upload_date_standardized}"
      episode_file_name: "s{season_number_padded}.e{episode_number_padded} - {file_title}"
      episode_file_path: "{season_directory_name_sanitized}/{episode_file_name_sanitized}"
      thumbnail_file_name: "{episode_file_path}-thumb.jpg"
      season_poster_file_name_plex: "{season_directory_name_sanitized}/Season{season_number_padded}.jpg"
      season_poster_file_name_default: "season{season_number_padded}-poster.jpg"
      player: "default"
      season_poster_file_name: >-
        {
          %if(
            %contains(player, 'plex'),
            season_poster_file_name_plex,
            season_poster_file_name_default
          )
        }
      file_convert_enable: >-
        {
          %if(
            %contains(player, 'plex'),
            'True',
            'False'
          )
        }
      nfo_tags_enable: >-
        {
          %if(
            %or(
              %contains(player, 'kodi'),
              %contains(player, 'jellyfin')
            )
            'True',
            'False'
          )
        }
      kodi_safe_enable: >-
        {
          %if(
            %contains(player, 'kodi'),
            'True',
            'False'
          )
        }
      format_selector_plex: "(bv*[ext=mp4][vcodec~='^((he|a)vc|h26[45])']+ba[ext=m4a]) / (bv[ext=mp4]*+ba[ext=m4a]/b)"
      format_selector_default: "bv*+ba/b"
      format_selector: >-
        {
          %if(
            %contains(player, 'plex'),
            format_selector_plex,
            format_selector_default
          )
        }


  "Plex":
    overrides:
      player: "plex"

  "Jellyfin":
    overrides:
      player: "jellyfin"

  "Kodi":
    overrides:
      player: "kodi"

  "TV Show by Date":
    preset:
      - "TV Show"
      - "_tv_show_by_date"
      - "season_by_year__episode_by_month_day"

  "TV Show Collection":
    preset:
      - "TV Show"
      - "_tv_show_collection"
